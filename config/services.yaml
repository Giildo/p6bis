# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\UI\Actions\:
        resource: '../src/UI/Actions/'
        tags: ['controller.service_arguments']

    # Listener
    App\Application\Listener\Security\NoAuthenticationCheckerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    App\Application\Listener\Trick\ResetSessionTokensListener:
        tags:
        - { name: kernel.event_listener, event: kernel.request }

    App\Application\Listener\Trick\RoleUserListener:
        tags:
        - { name: kernel.event_listener, event: kernel.request }

    App\Application\Listener\Comment\RoleUserListener:
        tags:
        - { name: kernel.event_listener, event: kernel.request }

    App\Application\Listener\Core\FlashMessageListener:
        tags:
        - { name: kernel.event_listener, event: app.event.flash_message, method: addFlashMessage }
